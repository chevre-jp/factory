import { ActionStatusType } from './actionStatusType';
import { ActionType } from './actionType';
import { AssetTransactionType } from './assetTransactionType';
import { IExtendId } from './autoGenerated';
import { CreativeWorkType } from './creativeWorkType';
import { OrganizationType } from './organizationType';
import { IPersonAttributes } from './person';
import { IProject } from './project';
import { SortType } from './sortType';

export interface IParticipantOptionalAttributes {
    name?: string;
    url?: string;
}
export type IParticipantAsWebApplication = IParticipantOptionalAttributes & {
    typeOf: CreativeWorkType.WebApplication;
    id: string;
    identifier?: never; // identifierを排除のため
};
export type IParticipantAsSoftwareApplication = IParticipantOptionalAttributes & {
    typeOf: CreativeWorkType.SoftwareApplication;
    id: string;
};
export type IParticipantAsPerson = IParticipantOptionalAttributes & Pick<IPersonAttributes, 'id' | 'typeOf'>;
export type IParticipantAsSeller = IParticipantOptionalAttributes & {
    typeOf: OrganizationType.Corporation;
    id: string;
    identifier?: never; // identifierを排除のため
};
export type IParticipantAsProject = IParticipantOptionalAttributes & {
    typeOf: OrganizationType.Project;
    id: string;
    identifier?: never; // identifierを排除のため
};
export type IParticipantAsCustomer = IParticipantOptionalAttributes & {
    typeOf: OrganizationType.Organization;
    id: string;
    identifier?: never; // identifierを排除のため
};
/**
 * アクションへの関係者
 */
export type IParticipant = IParticipantAsWebApplication
    | IParticipantAsSoftwareApplication // add(2024-05-17~)
    | IParticipantAsPerson
    | IParticipantAsSeller
    | IParticipantAsProject
    | IParticipantAsCustomer;
/**
 * アクション目的
 */
export interface IPurpose {
    typeOf: string;
}
export interface ISameAs {
    /**
     * タスクID or 資産取引ID
     */
    id: string;
    typeOf: 'Task' | AssetTransactionType.Pay;
}
/**
 * アクション属性
 */
export interface IAttributes<T extends ActionType, TObject, TResult> {
    project: Pick<IProject, 'id' | 'typeOf'>;
    agent: IParticipant;
    description?: string;
    error?: any;
    /**
     * The location of, for example, where an event is happening, where an organization is located, or where an action takes place.
     */
    location?: any;
    instrument?: any;
    object: TObject;
    potentialActions?: any;
    purpose?: IPurpose;
    recipient?: IParticipant;
    result?: TResult;
    sameAs?: ISameAs;
    /**
     * アクションタイプ
     */
    typeOf: T;
}
/**
 * アクション動的属性
 * リポジトリに保管時にセット、あるいは変更される
 */
export interface IDynamicAttributes {
    actionStatus: ActionStatusType;
    startDate: Date;
    endDate?: Date;
}
/**
 * アクション
 * {@link https://schema.org/Action}
 */
export type IAction<TAttributes extends IAttributes<ActionType, any, any>> = IExtendId<TAttributes & IDynamicAttributes>;
/**
 * ソート条件
 */
export interface ISortOrder {
    startDate?: SortType;
}
/**
 * 検索条件
 */
export interface ISearchConditions {
    limit?: number;
    page?: number;
    sort?: ISortOrder;
    id?: {
        $in?: string[];
        $nin?: string[];
    };
    project?: {
        id?: { $eq?: string };
    };
    typeOf?: ActionType | { $eq?: ActionType };
    actionStatus?: { $in?: ActionStatusType[] };
    actionStatusTypes?: ActionStatusType[];
    agent?: {
        typeOf?: {
            $in?: string[];
        };
        id?: {
            $in?: string[];
        };
    };
    instrument?: {
        typeOf?: { $eq?: string };
        transactionNumber?: { $eq?: string };
    };
    location?: {
        id?: { $eq?: string };
        identifier?: { $eq?: string };
    };
    object?: {
        id?: {
            $eq?: string;
            $in?: string[];
        };
        movieTickets?: {
            identifier?: {
                $eq?: string;
            };
            serviceOutput?: {
                reservationFor?: {
                    id?: {
                        $eq?: string;
                    };
                };
            };
        };
        object?: {
            /**
             * 通知アクション(決済、返金)の決済方法ID
             */
            paymentMethodId?: {
                $eq?: string;
            };
        };
        orderNumber?: {
            $in?: string[];
        };
        reservationFor?: {
            id?: { $eq?: string };
        };
        reservationNumber?: {
            $eq?: string;
            $in?: string[];
        };
        paymentMethod?: {
            accountId?: {
                $eq?: string;
            };
            /**
             * 決済アクションの決済方法ID
             */
            paymentMethodId?: {
                $eq?: string;
                $in?: string[];
            };
            typeOf?: {
                $eq?: string;
            };
        };
        /**
         * 承認アクションの決済方法ID
         */
        paymentMethodId?: {
            $eq?: string;
        };
        event?: {
            id?: {
                $in?: string[];
            };
        };
        acceptedOffer?: {
            itemOffered?: {
                serviceOutput?: {
                    reservedTicket?: {
                        ticketedSeat?: {
                            seatNumber?: {
                                $in?: string[];
                            };
                        };
                    };
                };
            };
        };
        typeOf?: {
            $eq?: string;
            $in?: string[];
        };
        /**
         * 確定アクション、採用アクションなどの資産取引番号
         */
        transactionNumber?: { $eq?: string };
    };
    startFrom?: Date;
    startThrough?: Date;
    purpose?: {
        typeOf?: {
            $in?: string[];
        };
        id?: {
            $in?: string[];
        };
        orderNumber?: {
            $in?: string[];
        };
    };
    result?: {
        typeOf?: {
            $in?: string[];
        };
        id?: {
            $in?: string[];
        };
        orderNumber?: {
            $in?: string[];
        };
        code?: {
            $in?: string[];
        };
    };
    sameAs?: {
        id?: {
            $eq?: string;
        };
    };
    fromLocation?: {
        typeOf?: {
            $in?: string[];
        };
        accountNumber?: {
            $in?: string[];
        };
        accountType?: {
            $in?: string[];
        };
    };
    toLocation?: {
        typeOf?: {
            $in?: string[];
        };
        accountNumber?: {
            $in?: string[];
        };
        accountType?: {
            $in?: string[];
        };
    };
}

import { IExtendId } from '../../autoGenerated';
import { IAccount, IAnonymousLocation } from '../action/moneyTransfer';
import * as TransactionFactory from '../transaction';
import { AccountTransactionType } from '../transactionType';

export type IStartParamsWithoutDetail = TransactionFactory.IStartParams<AccountTransactionType.Withdraw, IObjectWithoutDetail>;
/**
 * 取引開始パラメーター
 */
export type IStartParams = TransactionFactory.IStartParams<AccountTransactionType.Withdraw, IObject>;
export interface IObjectWithoutDetail extends TransactionFactory.IObjectWithoutDetail {
    fromLocation: TransactionFactory.ISimpleAccount;
    toLocation?: IAnonymousLocation;
    /**
     * 利用可能金額確認をしない場合、force: true
     */
    force?: boolean;
}
/**
 * 取引対象物
 */
export interface IObject extends TransactionFactory.IObject {
    /**
     * 出金元
     */
    fromLocation: IAccount;
    /**
     * 出金先
     */
    toLocation?: IAnonymousLocation;
}
export import IPotentialActions = TransactionFactory.IPotentialActions;
/**
 * 出金取引
 */
export interface IAttributes extends TransactionFactory.IAttributes<IStartParams> {
}
export type ITransaction = IExtendId<IAttributes>;

import { IExtendId } from '../autoGenerated';
import { ICategoryCode } from '../categoryCode';
import { CreativeWorkType } from '../creativeWorkType';
import { ProductType } from '../product';
import * as TaskFactory from '../task';
import { TaskName } from '../taskName';

export type CategoryCodeType = ICategoryCode['typeOf'];
export type IResourceTypeOf = CategoryCodeType | CreativeWorkType | ProductType;
export interface IData {
    id: string[];
    project: { id: string };
    typeOf: IResourceTypeOf;
    isNew: boolean;
    useInform: boolean;
}
export interface IAttributes extends TaskFactory.IAttributes {
    name: TaskName.OnResourceUpdated;
    data: IData;
}
/**
 * リソース変更時タスク
 */
export type ITask = IExtendId<IAttributes>;

import { IAccountTitle } from '../accountTitle';
import { IExtendId } from '../autoGenerated';
import { ICategoryCode } from '../categoryCode';
import { CreativeWorkType } from '../creativeWorkType';
import { EventType } from '../eventType';
import { IOfferCatalog } from '../offerCatalog';
import { OfferType } from '../offerType';
import { OrganizationType } from '../organizationType';
import { PlaceType } from '../placeType';
import { ProductType } from '../product';
import * as TaskFactory from '../task';
import { TaskName } from '../taskName';

export type AccountTitleType = IAccountTitle['typeOf'];
export type CategoryCodeType = ICategoryCode['typeOf'];
export type OfferCatalogType = IOfferCatalog['typeOf'];
export type IResourceTypeOf = AccountTitleType | CategoryCodeType | CreativeWorkType
    | EventType.ScreeningEventSeries
    | OrganizationType.Corporation | PlaceType.MovieTheater | ProductType
    | OfferCatalogType
    | OfferType.AggregateOffer;
// | OfferType.Offer;
export interface IData4common {
    id: string[];
    project: { id: string };
    typeOf: IResourceTypeOf;
    isNew: boolean;
    // 削除に対応(2023-07-28~)
    isDeleted?: boolean;
    useInform: boolean;
    /**
     * typeOf: OfferCatalogのリポジトリを判定するため
     */
    isOfferCatalogItem?: boolean;
}
// ルーム削除に対応(2023-07-31~)
export interface IData4screeningRoom {
    /**
     * ルームコード
     */
    branchCode: string;
    containedInPlace: {
        /**
         * 施設ID
         */
        id: string;
    };
    project: { id: string };
    typeOf: PlaceType.ScreeningRoom;
    // isNew: boolean;
    isDeleted: boolean;
    useInform: boolean;
}
export type IData = IData4common | IData4screeningRoom;
export interface IAttributes extends TaskFactory.IAttributes {
    name: TaskName.OnResourceUpdated;
    data: IData;
}
/**
 * リソース変更時タスク
 */
export type ITask = IExtendId<IAttributes>;

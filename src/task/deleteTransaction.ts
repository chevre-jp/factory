import { IExtendId } from '../autoGenerated';
import * as TaskFactory from '../task';
import { TaskName } from '../taskName';
import { IObject as IMoneyTransferObject, ITransaction as IMoneyTransfer } from '../transaction/moneyTransfer';
import { IObject as IPlaceOrderObject, ITransaction as IPlaceOrder } from '../transaction/placeOrder';
import { IObject as IReturnOrderObject, ITransaction as IReturnOrder } from '../transaction/returnOrder';

export type IObjectAsMoneyTransfer = Pick<IMoneyTransfer, 'project' | 'id' | 'typeOf' | 'startDate' | 'endDate'> & {
    object: Pick<IMoneyTransferObject, 'pendingTransaction'>;
};
export type IObjectAsPlaceOrder = Pick<IPlaceOrder, 'project' | 'id' | 'typeOf' | 'startDate' | 'endDate'> & {
    object: Pick<IPlaceOrderObject, 'confirmationNumber' | 'orderNumber'>;
};
export type IObjectAsReturnOrder = Pick<IReturnOrder, 'project' | 'id' | 'typeOf' | 'startDate' | 'endDate'> & {
    object: Pick<IReturnOrderObject, 'order'>;
};
export type IObject = IObjectAsMoneyTransfer | IObjectAsPlaceOrder | IObjectAsReturnOrder;
export interface IData {
    object: IObject;
}
export interface IAttributes extends TaskFactory.IAttributes {
    name: TaskName.DeleteTransaction;
    data: IData;
}
/**
 * 取引削除タスク
 */
export type ITask = IExtendId<IAttributes>;

import { IAttributes as IConfirmReservationActionAttributes, IObject4Chevre, IObject4COA } from '../action/interact/confirm/reservation';
import { IExtendId } from '../autoGenerated';
import * as WebAPIFactory from '../service/webAPI';
import * as TaskFactory from '../task';
import { TaskName } from '../taskName';

export type IObject4COAOptimized = Pick<IObject4COA, 'transactionNumber' | 'typeOf'> & {
    optimized: boolean;
};
export type IObject<T extends WebAPIFactory.Identifier> =
    T extends WebAPIFactory.Identifier.COA ? IObject4COAOptimized :
    IObject4Chevre;

export type IData = Pick<IConfirmReservationActionAttributes<WebAPIFactory.Identifier>, 'agent' | 'project' | 'purpose' | 'typeOf'> & {
    object: IObject<WebAPIFactory.Identifier>;
};
export interface IAttributes extends TaskFactory.IAttributes {
    name: TaskName.ConfirmReserveTransaction;
    data: IData;
}
/**
 * 予約資産取引確定タスク
 */
export type ITask = IExtendId<IAttributes>;

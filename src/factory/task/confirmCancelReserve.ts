import * as COA from '@motionpicture/coa-service';

import { IAttributes as ICancelActionAttributes } from '../action/transfer/return/reservation';
import * as CancelReservationTransactionFactory from '../assetTransaction/cancelReservation';
import { AssetTransactionType } from '../assetTransactionType';
import { IExtendId } from '../autoGenerated';
import * as WebAPIFactory from '../service/webAPI';
import * as TaskFactory from '../task';
import { TaskName } from '../taskName';

export type IObject4COA = COA.factory.reserve.IStateReserveArgs;

export interface IObject4Chevre {
    typeOf: AssetTransactionType.Reserve;
    id?: string;
    transactionNumber?: string;
}

export type IObject<T extends WebAPIFactory.Identifier> =
    T extends WebAPIFactory.Identifier.COA ? IObject4COA :
    IObject4Chevre;

export type IPotentialActions = CancelReservationTransactionFactory.IPotentialActionsParams;

export type IData = ICancelActionAttributes<IObject<WebAPIFactory.Identifier>, any> & {
    potentialActions?: IPotentialActions;
};

export interface IAttributes extends TaskFactory.IAttributes {
    name: TaskName.ConfirmCancelReserve;
    data: IData;
}

/**
 * 予約取消確定タスク
 */
export type ITask = IExtendId<IAttributes>;

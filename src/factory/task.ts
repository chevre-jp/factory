import { IExtendId } from './autoGenerated';
import { IProject } from './project';
import { SortType } from './sortType';
import { TaskName } from './taskName';
import { TaskStatus } from './taskStatus';

export type IData = any;
/**
 * タスク実行結果
 */
export interface IExecutionResult {
    executedAt: Date;
    error: any;
}
/**
 * タスク
 */
export type ITask = IExtendId<IAttributes>;
export interface IAttributes {
    project: Pick<IProject, 'id' | 'typeOf'>;
    /**
     * タスク名
     */
    name: TaskName;
    /**
     * タスク状況
     */
    status: TaskStatus;
    /**
     * いつ実行するか
     */
    runsAt: Date;
    /**
     * あと何回トライできるか
     */
    remainingNumberOfTries: number;
    /**
     * 最終トライ日時
     */
    lastTriedAt?: Date;
    /**
     * すでにトライした回数
     */
    numberOfTried: number;
    /**
     * 実行結果リスト
     */
    executionResults: IExecutionResult[];
    /**
     * データ
     * TaskNameによってインターフェースが決定する
     */
    data: IData;
}
/**
 * ソート条件
 */
export interface ISortOrder {
    runsAt?: SortType;
}
export interface IDataSearchConditions {
    object?: {
        transactionNumber?: { $eq?: string };
    };
    purpose?: {
        id?: { $eq?: string };
        orderNumber?: { $eq?: string };
    };
}
/**
 * タスク検索条件
 */
export interface ISearchConditions<T extends TaskName | string> {
    limit?: number;
    page?: number;
    sort?: ISortOrder;
    project?: {
        id?: { $eq?: string };
    };
    name?: T;
    statuses?: TaskStatus[];
    runsFrom?: Date;
    runsThrough?: Date;
    lastTriedFrom?: Date;
    lastTriedThrough?: Date;
    data?: IDataSearchConditions;
}
